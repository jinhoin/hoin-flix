{"version":3,"sources":["assets/404.jpg","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","styled","header","_templateObject","List","ul","_templateObject2","Item","li","_templateObject3","props","current","SLink","Link","_templateObject4","withRouter","_ref","pathname","location","react_default","a","createElement","to","Container","section","Section_templateObject","Title","span","Section_templateObject2","Grid","div","Section_templateObject3","Section","title","children","Loader_templateObject","Loader","Loader_Container","role","aria-label","Message_templateObject","Text","Message_templateObject2","color","Message","text","Message_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","Poster_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","react_router_dom","concat","Poster_Container","require","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","popular","nowPlaying","upComing","error","loading","Fragment","Helmet_default","Components_Loader","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","poster_path","vote_average","release_date","Components_Message","propTpyes","PropTypes","array","bool","isRequired","string","api","axios","create","baseURL","params","api_key","language","moviesApi","get","upcoming","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","console","log","_context","t0","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","original_name","first_air_date","isShow","TVContainer","TV_TVPresenter","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","realese_data","func","SearchContainer","event","preventDefault","_this","searchByTerm","target","_callee","_ref2","_ref3","regenerator_default","wrap","prev","next","sent","finish","stop","Search_SearchPresenter","Conatiner","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","OverView","_templateObject9","Divider","_templateObject10","Production","_templateObject11","PdoHeader","_templateObject12","PdoList","_templateObject13","DetailPresenter","result","original_title","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","genres","index","name","overview","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","match","push","history","parsedId","parseInt","isNaN","Detail_DetailPresenter","Router","Components_Header","react_router","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.9860470d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404.fbe3c4c0.jpg\";","import React from \"react\";\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n//뒤에 무조건 `` 붙여야된다\r\nconst Header = styled.header`\r\n    color: white;\r\n    position : fixed;\r\n    top : 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    display:flex;\r\n    align-items: center;\r\n    padding : 0px 10px;\r\n    z-index : 10;\r\n    box-shadow : 0px 1px 5px 2px rgba(0,0,0,0.8);\r\n      background-color: rgba(20, 20, 20, 0.8);\r\n\r\n`;\r\n\r\nconst List = styled.ul`\r\n    display:flex;\r\n `;\r\n\r\nconst Item = styled.li`\r\n    width : 80px;\r\n    height: 50px;\r\n    text-align : center;\r\n    display : flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n    \r\n    border-bottom : 5px solid \r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n\r\n    transition: border-bottom  0.5s ease-in-out;\r\n    /* &:not(last-child){\r\n    margin-right: 10px;\r\n    } */\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    height: 50px;\r\n    display: flex;\r\n    align-items : center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n    <Header>\r\n        {\r\n            // console.log(pathname, 'header.js에서 호출 위치를 알수있다')\r\n        }\r\n        <List>\r\n            <Item current={pathname === \"/\"}>\r\n                <SLink to=\"/\">Home</SLink>\r\n            </Item>\r\n\r\n            <Item current={pathname === \"/TV\"}>\r\n                <SLink to=\"/TV\">TV</SLink>\r\n            </Item>\r\n\r\n            <Item current={pathname === \"/Search\"}>\r\n                <SLink to=\"/Search\">Search</SLink>\r\n            </Item>\r\n\r\n        </List>\r\n    </Header>\r\n));\r\n\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Container = styled.section`\r\n  :not(:last-child) {\r\n     margin-bottom:20px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top:20px;\r\n    display: grid;\r\n\r\n    grid-template-columns:repeat(auto-fill, 125px);\r\n    grid-gap: 25px;\r\n`;\r\n\r\n// Api에서 불러오는 데이터들을 콘테이너로 정리하는거\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}  </Title>\r\n    <Grid>{children} </Grid>\r\n  </Container>\r\n);\r\n\r\n// Section 이라는 메서드에 프롭 타입을 지정함\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\n\r\n\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Container = styled.div`\r\n    width : 100vw;\r\n    height: 100vh;\r\n    display : flex;\r\n    justify-content : center;\r\n    font-size: 32px;\r\n    margin-top:20px;\r\n`;\r\n\r\nconst Loader = () => <Container><span role=\"img\" aria-label=\"Loading\">⏰</span></Container>\r\n\r\nexport default Loader;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width: 100vw;\r\n    display:flex;\r\n    justify-content:center;\r\n    /* align-items: center; */\r\n`;\r\n\r\nconst Text = styled.span`\r\n        color: ${props => props.color};\r\n        font-weight : bold;\r\n`;\r\n\r\nconst  Message = ({ text,color }) => <Container><Text color={color}>{text}</Text></Container>\r\n\r\n Message.propTypes = {\r\n    color: PropTypes.string.isRequired,\r\n    text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Container = styled.div`\r\n    font-size:12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n    background-image: url(${props => props.bgUrl});\r\n    /* width:100px; */\r\n    background-size: cover;\r\n    height: 180px;\r\n    background-position : center center;\r\n    border-radius : 4px;\r\n    transition : opacity 0.3s linear;\r\n`;\r\nconst Rating = styled.span`\r\n    position : absolute;\r\n    bottom : 10px;\r\n    right : 2px;\r\n    opacity : 0.3;\r\n    transition : opacity 0.3s linear;\r\n\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom : 5px;\r\n    position : relative;\r\n    &:hover {\r\n        ${Image}{\r\n         opacity : 0.3;\r\n        }\r\n        ${Rating}{\r\n            opacity : 1;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst Title = styled.div`\r\n    display : block;\r\n    font-size : 12px;\r\n    margin-bottom : 3px;\r\n\r\n`;\r\n\r\nconst Year = styled.span`\r\n    font-size : 10px;\r\n    color : rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\n\r\n\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require('../assets/404.jpg')} />\r\n                <Rating>\r\n                    <span role=\"img\" aria-label=\"rating\">⭐️\r\n                        {\" \"}{rating}/10\r\n                    </span>\r\n                </Rating>\r\n            </ImageContainer>\r\n            <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n    </Link>\r\n);\r\n\r\n\r\nPoster.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imageUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n\r\n}\r\n\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from 'Components/Section'\r\nimport Loader from \"Components/Loader\"\r\nimport Message from \"Components/Message\"\r\nimport Poster from \"Components/Poster\"\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding : 20px;\r\n\r\n`;\r\n\r\nconst HomePresenter = ({\r\n  popular,\r\n  nowPlaying,\r\n  upComing,\r\n  error,\r\n  loading,\r\n\r\n}) =>\r\n// 타이틀을 전제로 무조건 뜨게한다 \r\n<>\r\n  <Helmet>\r\n          <title>Movies | HoinFlix</title>\r\n  </Helmet>\r\n\r\n {loading ? (\r\n  <Loader />\r\n)\r\n\r\n    : (\r\n      <Container>\r\n        \r\n        {upComing && upComing.length > 0 &&\r\n          <Section title=\"upComing Movie\">\r\n            {upComing.map(movie =>\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n\r\n                imageUrl={movie.poster_path}\r\n                title={movie.title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            )}\r\n          </Section>\r\n        }\r\n\r\n        {nowPlaying && nowPlaying.length > 0 &&\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map(movie =>\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n\r\n                imageUrl={movie.poster_path}\r\n                title={movie.title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            )}\r\n          </Section>\r\n        }\r\n        {popular && popular.length > 0 &&\r\n          <Section title=\"popular Movie\">\r\n            {popular.map(movie =>\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n\r\n              />\r\n            )}\r\n          </Section>\r\n        }\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )};\r\n\r\n</>\r\n\r\n\r\n\r\nHomePresenter.propTpyes = {\r\n  popular: PropTypes.array,\r\n  nowPlaying: PropTypes.array,\r\n  upComing: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n\r\n}\r\n\r\nexport default HomePresenter;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key: \"10923b261ba94d897ac6b81148314a3f\",\r\n        language: \"en-US\"\r\n    }\r\n});\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: id =>\r\n        api.get(`movie/${id}`, {\r\n            params: {\r\n                append_to_response: \"videos\"\r\n            }\r\n        }),\r\n    search: term =>\r\n        api.get(\"search/movie\", {\r\n            params: {\r\n                query: encodeURIComponent(term)\r\n            }\r\n        })\r\n};\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    showDetail: id =>\r\n        api.get(`tv/${id}`, {\r\n            params: {\r\n                append_to_response: \"videos\"\r\n            }\r\n        }),\r\n    search: term =>\r\n        api.get(\"search/tv\", {\r\n            params: {\r\n                query: encodeURIComponent(term)\r\n            }\r\n        })\r\n};\r\n","import HomeContainer from \"./HomeContainer\"\r\n\r\n\r\nexport default HomeContainer\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\"\r\n\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true,\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            // 모조건 기다리게 한다 api resopne 을 받지 않음\r\n            const { data: { results: nowPlaying } } = await moviesApi.nowPlaying();\r\n            const { data: { results: upComing } } = await moviesApi.upcoming();\r\n            const { data: { results: popular } } = await moviesApi.popular();\r\n            // error 를 일부러 던져봄\r\n            // throw Error();\r\n\r\n            this.setState({\r\n                popular,\r\n                nowPlaying,\r\n                upComing,\r\n            });\r\n\r\n        } catch (error) {\r\n            this.setState({\r\n                error: \" Cant't find movies infomation.\"\r\n            })\r\n            console.log(error);\r\n\r\n        }\r\n        finally {\r\n            // 머가 됫든 loading false\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { nowPlaying, upComing, popular, error, loading } = this.state;\r\n        console.log(this.state);\r\n        return (\r\n            <HomePresenter\r\n\r\n                nowPlaying={nowPlaying}\r\n                upComing={upComing}\r\n                popular={popular}\r\n                error={error}\r\n                loading={loading}\r\n\r\n            />\r\n        )\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"Components/Message\"\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) =>\r\n <>\r\n <Helmet>\r\n          <title>TV | HoinFlix</title>\r\n  </Helmet>\r\n{\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map(show =>\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n\r\n            )}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map(\r\n              show =>\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  imageUrl={show.poster_path}\r\n                  title={show.original_name}\r\n                  rating={show.vote_average}\r\n                  year={show.first_air_date.substring(0, 4)}\r\n                  isShow={true}\r\n                />\r\n            )}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map(show =>\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            )}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\"\r\n          text={error} />}\r\n      </Container>\r\n\r\n    )};\r\n</>\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\"\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        showDetail: null,\r\n        error: null,\r\n        loading: true,\r\n    };\r\n    async componentDidMount() {\r\n        try {\r\n            const { data: { results: topRated } } = await tvApi.topRated();\r\n            const { data: { results: popular } } = await tvApi.popular();\r\n            const { data: { results: airingToday } } = await tvApi.airingToday();\r\n\r\n            console.log(topRated);\r\n            console.log(popular);\r\n            // 함수명과 변수명이 같으면 생략가능 js에서는\r\n            this.setState({\r\n                topRated,\r\n                popular,\r\n                airingToday,\r\n            });\r\n\r\n\r\n        } catch (error) {\r\n            this.setState({\r\n                error: \"error mounted\"\r\n            });\r\n        }finally{\r\n            this.setState({\r\n                loading : false\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { topRated, popular, airingToday, error, loading } = this.state;\r\n        console.log('[TVContainer ]',this.state);\r\n        return (\r\n            <TVPresenter\r\n                topRated={topRated}\r\n                popular={popular}\r\n                airingToday={airingToday}\r\n                error={error}\r\n                loading={loading}\r\n\r\n            />\r\n        )\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\n\r\nconst Container = styled.div`\r\n   padding: 20px  20px;\r\n `;\r\nconst Form = styled.form`\r\n   margin-bottom: 50px;\r\n   width: 100%;\r\n `;\r\nconst Input = styled.input`\r\n   all : unset;\r\n   font-size: 23px;\r\n   width: 100%;\r\n `;\r\n\r\nconst SearchPresenter = ({\r\n   movieResults,\r\n   tvResults,\r\n   searchTerm,\r\n   error,\r\n   loading,\r\n   handleSubmit,\r\n   updateTerm,\r\n}) => (\r\n      <Container>\r\n         <Helmet>\r\n            <title>Search | Hoinflix </title>\r\n         </Helmet>\r\n         <Form onSubmit={handleSubmit}>\r\n            <Input placeholder=\"Search Movies or TV shows ...\" value={searchTerm}\r\n               onChange={updateTerm}\r\n            ></Input>\r\n\r\n         </Form>\r\n\r\n         { loading ? (<Loader />) : (\r\n            <>\r\n               {movieResults && movieResults.length > 0 &&\r\n                  (\r\n                     <Section title=\"movie Result\">\r\n                        {movieResults.map(movie =>\r\n                           (\r\n                              <Poster\r\n                                 key={movie.id}\r\n                                 id={movie.id}\r\n                                 imageUrl={movie.poster_path}\r\n                                 title={movie.title}\r\n                                 rating={movie.vote_average}\r\n                                 year={movie.realese_data && movie.realese_data.substring(0, 4)}\r\n                                 isMovie={true}\r\n\r\n                              ></Poster>\r\n                           )\r\n                        )}\r\n                     </Section>\r\n                  )\r\n               }\r\n               {tvResults && tvResults.length > 0 &&\r\n                  (\r\n                     <Section title=\"tv Results \">\r\n                        {tvResults.map(show =>\r\n                           <Poster\r\n                              key={show.id}\r\n                              id={show.id}\r\n\r\n                              imageUrl={show.poster_path}\r\n                              title={show.original_name}\r\n                              rating={show.vote_average}\r\n                              year={show.first_air_date.substring(0, 4)}\r\n                              isShow={true}\r\n                           />\r\n                        )}\r\n                     </Section>\r\n                  )\r\n               }\r\n               {error && <Message color=\"#e74c3c\" text={error} />}\r\n               {movieResults &&\r\n                  movieResults.length === 0 &&\r\n                  tvResults &&\r\n                  tvResults.length === 0 && (\r\n                     <Message color=\"#95a5a6\" text={`Nothing found for : ${searchTerm}`} />\r\n                  )}\r\n\r\n            </>\r\n\r\n         )}\r\n\r\n      </Container>\r\n   );\r\n\r\n\r\nSearchPresenter.propTpyes = {\r\n   movieResults: PropTypes.array,\r\n   tvResults: PropTypes.array,\r\n   upcoming: PropTypes.array,\r\n   searchTerm: PropTypes.func.isRequired,\r\n   updateTerm: PropTypes.func.isRequired,\r\n   loading: PropTypes.bool.isRequired,\r\n   error: PropTypes.string,\r\n   handleSubmit: PropTypes.func.isRequired,\r\n\r\n\r\n\r\n}\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\"\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport {\r\n    moviesApi,\r\n    tvApi\r\n} from 'api';\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        error: null,\r\n        searchTerm: \"\",\r\n        loading: false,\r\n    };\r\n\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { searchTerm } = this.state;\r\n        if (searchTerm !== \"\") {\r\n            this.searchByTerm();\r\n        }\r\n    }\r\n\r\n    updateTerm = (event) => {\r\n        const { target: { value } } = event;\r\n        this.setState({\r\n            searchTerm: value\r\n        });\r\n\r\n    }\r\n\r\n    searchByTerm = async () => {\r\n        const {\r\n            searchTerm\r\n        } = this.state;\r\n\r\n        try {\r\n            const {\r\n                data: {\r\n                    results: movieResults\r\n                }\r\n            } = await moviesApi.search(searchTerm);\r\n\r\n            const {\r\n                data: {\r\n                    results: tvResults\r\n                }\r\n            } = await tvApi.search(searchTerm);\r\n            // console.log(movieResults, 'movieSearch');\r\n            // console.log(tvResults, 'tvsearch');\r\n\r\n            this.setState({\r\n                movieResults,\r\n                tvResults,\r\n\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Cant't find results.\"\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            movieResults,\r\n            tvResults,\r\n            searchTerm,\r\n            loading,\r\n            error,\r\n        } = this.state;\r\n        // console.log(this.state);\r\n\r\n        return (\r\n            <SearchPresenter\r\n                movieResults={\r\n                    movieResults\r\n                }\r\n                tvResults={\r\n                    tvResults\r\n                }\r\n                searchTerm={\r\n                    searchTerm\r\n                }\r\n                error={\r\n                    error\r\n                }\r\n                loading={\r\n                    loading\r\n                }\r\n                handleSubmit={this.handleSubmit\r\n                }\r\n                updateTerm={\r\n                    this.updateTerm\r\n                }\r\n\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loader from \"Components/Loader\";\r\nimport styled from \"styled-components\";\r\nimport Message from \"Components/Message\";\r\nimport Helmet from \"react-helmet\";\r\n\r\n\r\nconst Conatiner = styled.div`\r\n    height : calc(100vh - 50px);\r\n    width : 100%;\r\n   position : relative;\r\n    padding: 50px;\r\n\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position : absolute;\r\n    top : 0;\r\n    left: 0;\r\n    width  : 100%;\r\n    height : 100%;\r\n    background-image : url(${props => props.bgImage});\r\n    background-position : center center;\r\n    background-size : cover;\r\n    filter : blur(2px);\r\n    opacity : 0.5;\r\n    z-index : 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  z-index: 1;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width : 70%;\r\n    margin-left : 10px;\r\n\r\n\r\n`;\r\n\r\nconst Title = styled.div`\r\n    font-size : 32px;\r\n    /* color : white; */\r\n    margin-bottom : 10px;\r\n`;\r\nconst ItemContainer = styled.div`\r\nmargin-bottom: 20px;\r\n`;\r\n\r\nconst Item = styled.span`\r\n    padding-right : 5px;\r\n`;\r\nconst OverView = styled.p`\r\n    font-size: 12px;\r\n    opacity : 0.7;\r\n    line-height: 1.5;\r\n    width : 50%;\r\n`;\r\nconst Divider = styled.span`\r\n    margin : 0;\r\n`;\r\n\r\nconst Production = styled.div`\r\n    width: 80%;\r\n    height: 20%;\r\n    /* border: 1px solid white; */\r\n    background-color: white;\r\n    opacity: 0.3;\r\n    position: relative;\r\n    border-radius: 12px;\r\n    margin-top: 10px;\r\n    \r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n`;\r\nconst PdoHeader = styled.span`\r\n    position: absolute;\r\n    top: 12px;\r\n    left: 12px;\r\n    color: red;\r\n    opacity: 1;\r\n    font-weight: bold;\r\n    font-size: 15px;\r\n`;\r\n\r\nconst PdoList = styled.ul`\r\n    width: 90%;\r\n    height: 80%;\r\n    border: 1px solid red;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading }) =>\r\n    loading ? (\r\n        <>\r\n        <Helmet>\r\n            <title>Loading | HoinFlix</title>\r\n        </Helmet>\r\n        <Loader />\r\n        </>\r\n    ) : (\r\n            <>\r\n                {\r\n                    <Conatiner>\r\n                        <Helmet>\r\n                            <title>{result.original_title ? result.original_title : result.original_name} | hoinflix </title>\r\n                        </Helmet>\r\n                        <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\r\n                        <Content>\r\n                            <Cover\r\n                                bgImage={\r\n                                    result.poster_path\r\n                                        ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                                        : require(\"../../assets/404.jpg\")\r\n                                }\r\n                            />\r\n                            <Data>\r\n                                <Title>{result.original_title ? result.original_title : result.original_name}</Title>\r\n                                <ItemContainer>\r\n                                    <Item>{result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}</Item>\r\n                                    <Divider> * </Divider>\r\n                                    <Item>{result.runtime ? result.runtime : result.episode_run_time[0]}</Item>\r\n                                    <Item>{result.genres && result.genres.map((genres, index) => index === result.genres.length - 1\r\n                                        ? `${genres.name}` : `${genres.name} /`)}\r\n                                    </Item>\r\n                                </ItemContainer>\r\n                                <OverView>\r\n                                    {result.overview ? result.overview : `${result.overview}를 못찾았습니다`}\r\n\r\n                                </OverView>\r\n                                <Production>\r\n                                        <PdoHeader>Production Compaines</PdoHeader>\r\n                                        <PdoList>\r\n\r\n                                        </PdoList>\r\n                                </Production>\r\n                            </Data>\r\n                        </Content>\r\n\r\n\r\n                    </Conatiner >\r\n\r\n                }\r\n                {error && <Message color=\"#e74c3c\" text={error} />}\r\n            </>\r\n        );\r\n\r\n\r\n\r\n\r\nDetailPresenter.propTypes = {\r\n    result: PropTypes.object,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n}\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\"\r\n\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"api\"\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        const { location: { pathname } } = props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            // 클래스를 만들어준거다\r\n            isMovie: pathname.includes(\"/movie/\"),\r\n        }\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const {\r\n            match: {\r\n                params: { id }\r\n            },\r\n            history: { push },\r\n        } = this.props;\r\n        const { isMovie } = this.state;\r\n\r\n        // this.isMovie = pathname.include(\"/movie/\");\r\n\r\n        const parsedId = parseInt(id);\r\n        if (isNaN(parsedId)) {\r\n            return push('/');\r\n        }\r\n        let result = null;\r\n        try {\r\n            if (isMovie) {\r\n                ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n            } else {\r\n                ({ data: result } = await tvApi.showDetail((parsedId)));\r\n\r\n\r\n            }\r\n            console.log(result);\r\n        } catch (error) {\r\n            this.setState({\r\n                error: \"can' note find anything \"\r\n\r\n            });\r\n        } finally {\r\n            this.setState({ loading: false, result })\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { result, error, loading } = this.state;\r\n        console.log('result', result);\r\n\r\n        return <DetailPresenter result={result} error={error} loading={loading} />\r\n    }\r\n}","import React from \"react\"\r\nimport {\r\n    HashRouter as Router,\r\n    Route,\r\n    Redirect,\r\n    Switch\r\n} from \"react-router-dom\"\r\nimport Header from \"Components/Header\"\r\nimport Home from 'Routes/Home';\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\n\r\n\r\nexport default () => (\r\n    <Router >\r\n        <Header />\r\n        {    /* 한번에 오직 하나의 Route만 Render하게됨*/}\r\n        <Switch >\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/tv\" component={TV} /> {    /* <Route paht=\"/tv/popula\" render={()=> <h1>Popular</h1>}></Route> */}\r\n            <Route path=\"/search\" component={Search} />\r\n            <Route path=\"/movie/:id/\" component={Detail} />\r\n            <Route path=\"/show/:id/\" component={Detail} />\r\n\r\n            <Redirect from=\"*\" to=\"/\" />\r\n\r\n            {/* 기본으로 모든 Router는 모든  Route들 props 해준다 */}\r\n            {/* 맞춰주는 페이지가 없을경우  Home 으로 간다 */}\r\n        </Switch>\r\n    </Router >\r\n);","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color: white;\r\n    }\r\n\r\n    *{\r\n        box-sizing:border-box;\r\n\r\n    }\r\n    body{\r\n        /* font-family : */\r\n        font-size:14px;\r\n        background-color : black;\r\n        color: white;\r\n        opacity: 0.9;\r\n        padding-top:50px;\r\n\r\n    }\r\n\r\n  `;\r\n\r\nexport default globalStyles;","import React, { Component } from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from \"Components/GlobalStyles\";\n// index.js 를 호추랳서 괜찮다\n\nclass App extends Component {\n  render() {\n    return <>\n      <Router ></Router>\n      <GlobalStyles></GlobalStyles>\n    </>\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}